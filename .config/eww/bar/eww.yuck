;; WIDGETS
; Time
(defpoll clock :interval "20s" `date +"%A %d %b | %R"`)
(defwidget time []
    (label :class "time"
           :text "${clock}"))

; Workspaces
(deflisten workspace :initial "(box (label :class \"workspaces\" :text \"         \" ))"
   `python ../scripts/workspaces.py`)
(defwidget workspaces []
   (literal :content workspace))

; Battery
(defpoll battery            :interval "1s" "../scripts/battery.sh icon")
(defpoll battery-capacity   :interval "1s" "../scripts/battery.sh percent")
(defwidget bat []
    (box    :orientation "h"
            :space-evenly "false"
    (label  :class "bat"
            :halign "end"
            :text "${battery}"
            :tooltip "Battery: ${battery-capacity}%")))

; Wifi
(defpoll wifi-icon :interval "1s" "../scripts/wifi.sh icon")
(defpoll wifi-name :interval "1s" "../scripts/wifi.sh name")
(defwidget wifi []
    (box    :orientation "h"
            :tooltip wifi-name
    (button :class "wifi-icon"
            wifi-icon))) ;TODO add popup

; Brightness
(defpoll current-brightenss :interval "1s" "brightnessctl -m | cut -d ',' -f 4")
(defvar bright-show false)
(defwidget bright []
    (eventbox :onhover "eww update bright-show=true"
              :onhoverlost "eww update bright-show=false"
              (box    :orientation "h"
                      :space-evenly "false"
                      :spacing 2
              (revealer :transition "slideleft"
                        :reveal bright-show
                        :duration "550ms"
              (scale :class "brightness-bar"
;                    :value current-brightness
;                    :tooltip "Brightness: ${current-brightenss}%"
                     :onchange "brightnessctl set {}%"
                     :orientation "h"
                     :flipped false
                     :max 101
                     :min 0))
              (label :class "brightness-icon"
                     :text ""))))

;; Volume Widgets ;;
(defpoll current-volume :interval "1s" "amixer -D pulse sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%'")
(defvar volume-show false)
(defwidget volum []
    (eventbox :onhover "$eww update volume-show=true" 		
			        :onhoverlost "$eww update volume-show=false"
	  (box      :orientation "v" 	  
			        :space-evenly "false" 
			        :spacing "2"
	  (revealer :transition "slideup" 
			        :reveal volume-show
			        :duration "550ms"
	  (scale    :class "volbar" 	  
			        :value current-volume 
			        :orientation "v"      
			        :flipped true 
			        :tooltip "Volume: ${current-volume}%" 
			        :max 101 
			        :min 0 
			        :onchange "amixer -D pulse sset Master {}%" ))
	  (button   :onclick "scripts/popup audio"   :class "volume-icon" ""))))


;; ORGANIZING
(defwidget systray []
    (box    :orientation "h"
            :halign "end"
            (bright)
            (bat)
            (wifi)
            (volum)))

; Left
(defwidget left []
    (box    :orientanion "h"
            :halign "start"
            (workspaces)))

(defwidget center []
    (box    :orientation "h"
            :halign "center"
            (time)))

(defwidget right []
    (box    :orientation "h"
            :halign "end"
            (systray)))

(defwidget container []
    (box    :class "main-container"
            :orientation "h"
            :space-evenly "true"
            (left)
            (center)
            (right)))

;; WINDOW
(defwindow bar
    :monitor 0
    :windowtype "dock"
    :geometry (geometry :width "100%"
                        :anchor "top center")
    :exclusive true
    (container)
)
